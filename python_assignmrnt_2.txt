Python Mega assignment:
---------------------------
Q1. Why do we call Python as a general purpose and high-level programming language?
Ans: Python is called general purpose because it can be used to create a variety of different programs but it is not specialized for any specific problem.
     It is call high level because it is written in human readable language which is translated to machine level language by the interpretor/compiler.

Q2. Why is Python called a dynamically typed language?
Ans:It is called dynamically typed because the variable type is determined during the run time.

Q3. List some pros and cons of Python programming language?
Ans:Pros: Extensive libraries , Beginner - friendly , large community.
    Cons:Python is dynamically typed, slower then compiled languages.

Q4. In what all domains can we use Python?
Ans:Machine learning , Big data , AI.

Q5. What are variable and how can we declare them?
Ans : Variables are name of memory storage , we declare variable in python during initialization.

Q6. How can we take an input from the user in Python?
Ans:input() function is used.

Q7. What is the default datatype of the value that has been taken as an input using input() function?
Ans : String datatype.

Q8. What is type casting?
Ans: The process of converting one datatype into other.

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
Ans: We can take multiple input from single input function using .split() method.
     e.g-> a, b, c = input("Enter three values: ").split()  

Q10. What are keywords?
Ans: Keywords are reserved words in python programming which cannot be used for general purpose but for those specific purpose.

Q11. Can we use keywords as a variable? Support your answer with reason.
Ans: No we cant use keyword as variable because those are reserved word which have predefined meaning.

Q12. What is indentation? What's the use of indentaion in Python?
Ans: It refers to the spaces at the begining of code line, python use identation to indicate a block of code.

Q13. How can we throw some output in Python?
Ans: Using print() method.

Q14. What are operators in Python?
Ans: Add (+) , substract(-) , multipy(*) , division (/) , modulus(%),power(**) etc.

Q15. What is difference between / and // operators?
Ans: With single / we get the decimal part also after division but with // the decimal part is skipped from the result.

Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
Ans: print('''```
iNeuroniNeuroniNeuroniNeuron
```'''
)

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

Ans:
def even_odd(num):
    print(type(num))
    if(num%2 == 0):
        print("The number ",num," is EVEN")

    else:
        print("The number ",num," is ODD") 


print("Please enter the number")
a=int(input())
even_odd(a)     
    

   

Q18. What are boolean operator?

Ans: Operator which return true or false. E.g -> and , or and not.

Q19. What will the output of the following?
```
1 or 0 --> 1

0 and 0 --> 0

True and False and True --> False

1 or 0 or 0 --> 1
```

Q20. What are conditional statements in Python?

Ans: Those statement which decides if a block of code will be executed or not . E.g - > if statement.

Q21. What is use of 'if', 'elif' and 'else' keywords?
Ans: 'if' - > It check the condition when its satisfied then it execudes the corresponding code written under it.
     'elif'-> It is executed when the if condition prior to it was not satisfied.
     'else'-> When  the if,elif condition are not satisfied then finally else condition is executed.

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
Ans:
def vote(age):
    if(age>=18):
        print("I can Vote")

    else:
        print("I can't vote")

print("Please Enter you age")
age=int(input())
vote(age)   

Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans: 
def even_list(list):
    list_final = []
    for num in list:
        if(num%2==0):
            list_final.append(num)
    return list_final       



numbers = [12, 75, 150, 180, 145, 525, 50]
a=even_list(numbers)
print(a)

Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
Ans:
def gretest_number(a,b,c):
    num=a
    if(b>num):
        num=b
        if(c>num):
            num=c
    elif(c>num):
        num=c
    return num    


a,b,c=input("Enter three numbers:").split(",")
print("Greatest num is:",gretest_number(a, b, c))

Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans:
def unique_num(input_list):
    new_list=[]
    for i in input_list:
        if(i>500):
            break
        elif(i>150):
            continue
        elif(i%5==0):
            new_list.append(i)
    return new_list            
    
numbers = [12, 75, 150, 180, 145, 525, 50]
print("The required result is:",unique_num(numbers))

Q26. What is a string? How can we declare string in Python?
Ans:Like many other popular programming languages, strings in Python are arrays of bytes representing unicode characters. 
However, Python does not have a character data type, a single character is simply a string with a length of 1. 
Square brackets can be used to access elements of the string.
 strings can be declared by enclosing the character or the sequence of characters in the quotes.

Q27. How can we access the string using its index?
Ans:Individual characters in a string can be accessed by specifying the string name followed by a number in square brackets ( [] ). 
String indexing in Python is zero-based: the first character in the string has index 0 , the next has index 1 , and so on.

Q28. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "iNeuron"

Ans:
strings = "Big Data iNeuron"

list_str= strings.split(" ")
print(list_str[2])

Q29. Write a code to get the desired output of the following

string = "Big Data iNeuron"
desired_output = "norueNi"

Ans:
string = "Big Data iNeuron"
print(string[:7:-1])

Q30. Resverse the string given in the above question.

Ans:
string = "Big Data iNeuron"
print(string[::-1])

Q31. How can you delete entire string at once?

Ans:
strings = "Big Data iNeuron"
del strings

Q32. What is escape sequence?
Ans: To insert characters that are illegal in a string, use an escape character. 
An escape character is a backslash \ followed by the character you want to insert.

Q33. How can you print the below string?

'iNeuron's Big Data Course'

Ans: print("'iNeuron's Big Data Course'")

Q34. What is a list in Python?

Ans: Lists are used to store multiple items in a single variable. 
Lists are one of 4 built-in data types in Python used to store collections of data, the other 3 are Tuple, Set, and Dictionary.

Q35. How can you create a list in Python?

Ans: In python, a list is simply created by using square bracket. The elements of list should be specified within square brackets.
     E.g - > my_list = [1,2,3,4,5]

Q36. How can we access the elements in a list?
Ans:We use square brackets [ ] to access data, with the first element at index 0.

Q37. Write a code to access the word "iNeuron" from the given list.

lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]

Ans: print(zlst[4][2])

Q38. Take a list as an input from the user and find the length of the list.

Ans: 
print("Please enter list of items:")
a=[]
a=input().split(" ")
print(len(a))

Q39. Add the word "Big" in the 3rd index of the given list.

lst = ["Welcome", "to", "Data", "course"]

Ans:
lst = ["Welcome", "to", "Data", "course"]
lst_new = "Big"+lst[2]
lst[2]=lst_new
print(lst)
Q40. What is a tuple? How is it different from list?

Ans: Tuples are used to store multiple items in a single variable.A tuple is a collection which is ordered and unchangeable whereas list is changeable.


Q41. How can you create a tuple in Python?

Ans: A tuple is created by placing all the items (elements) inside parentheses () , separated by commas. E.g -> a ={1,2,3}.

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

Ans: Yes we can do it.
a=()
a="Adil"
print(a)

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

Ans: Yes, beow is the code for it.

t1=(1,2,3,4,5)
t2=(5,3,5,6,7)
t_final=t1+t2
print(t_final)

Q44. Take a tuple as an input and print the count of elements in it.

Ans: 
t=()
t=input("Please enter elements:").split()
print(t)

Q45. What are sets in Python?

Ans: Sets are used to store multiple items in a single variable.A set is a collection which is unordered, unchangeable*, and unindexed.

Q46. How can you create a set?

Ans: s = {'I', 'Like', 'Python'}

Q47. Create a set and add "iNeuron" in your set.

Ans: 
items = set()
items.add("iNeuron")
print(items)

Q48. Try to add multiple values using add() function.

Ans :

items = set()
items.add("iNeuron")
items.add(2)
items.add("bigdata")
print(items)

Q49. How is update() different from add()?

Ans: add() accepts a single parameter, whereas update() can accept multiple sequences.

Q50. What is clear() in sets?

Ans: The clear() method removes all elements in a set.

Q51. What is frozen set?

Ans:Frozenset is similar to set in Python, except that frozensets are immutable, which implies that once generated, 
    elements from the frozenset cannot be added or removed. This function accepts any iterable object as input and transforms it into an immutable object.

Q52. How is frozen set different from set?
Ans: A set is a mutable object while frozenset provides an immutable implementation

Q53. What is union() in sets? Explain via code.

Ans: It shows all the element present in A and B.
A = {2, 4, 5, 6}
B = {4, 6, 7, 8}

print("union:",A.union(B))

Q54. What is intersection() in sets? Explain via code.

Ans: It return set with elements common in both sets.

A = {2, 4, 5, 6}
B = {4, 6, 7, 8}

print("union:",A.intersection(B))

Q55. What is dictionary in Python?

Ans:A dictionary consists of a collection of key-value pairs. Each key-value pair maps the key to its associated value

Q56. How is dictionary different from all other data structures.

Ans: The dictionary Data Structure in Python is an unordered collection of items. 
While other Data Structures use only one value as the element, the dictionary is a slightly more compound data structure. 
It makes use of two elements i.e. a pair of elements, namely, a key and a value.

Q57. How can we delare a dictionary in Python?

Ans: A dictionary can be created by placing a sequence of elements within curly {} braces, separated by ‘comma’. 
Dictionary holds pairs of values, one being the Key and the other is value.
e.g ->Dict = {1: 'Geeks', 2: 'For', 3: 'Geeks'}

Q58. What will the output of the following?

var = {}
print(type(var))

Ans:<class 'dict'>

Q59. How can we add an element in a dictionary?

Ans: 

dict_1 = {1:'value1',2:'value2',3:'value3'}
print(dict_1)
dict_1[4]='value4'
print(dict_1)

Q60. Create a dictionary and access all the values in that dictionary.

Ans: dict_1 = {1:'value1',2:'value2',3:'value3'}

for k,v in dict_1.items():
    print("key:",k," ",'value:',v)

Q61. Create a nested dictionary and access all the element in the inner dictionary.

Ans: 
dict_1 = {1:'value1',2:'value2',3:'value3'}

dict_2 = {"name":124,"class":12}

dict_1["other_detail"] = {"name":123,"class":12}
print(dict_1["other_detail"].keys())
    
print(dict_1["other_detail"].values())

Q62. What is the use of get() function?

ANs: The get() method returns the value of the item with the specified key.

Q63. What is the use of items() function?

Ans: The items () method in the dictionary is used to return each item in a dictionary as tuples in a list

Q64. What is the use of pop() function?

Ans: List pop in Python is a pre-defined, in-built function that removes an item at the specified index from the list.

Q65. What is the use of popitems() function?

Ans: The popitem() method removes the item that was last inserted into the dictionary.

Q66. What is the use of keys() function?

Ans: The keys() method returns a view object. The view object contains the keys of the dictionary, as a list.

Q67. What is the use of values() function?

Ans: The values() method returns a view object. The view object contains the values of the dictionary, as a list.

Q68. What are loops in Python?

Ans: A for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string).

Q69. How many type of loop are there in Python?

Ans: for loop, while loop, and nested loop.

Q70. What is the difference between for and while loops?

Ans: The major difference between for loop and the while loop is that for loop is used when the number of iterations is known, 
whereas execution is done in the while loop until the statement in the program is proved wrong.

Q71. What is the use of continue statement?

Ans : The continue statement passes control to the next iteration of the nearest enclosing do , for , or while statement in which it appears, 
bypassing any remaining statements in the do , for , or while statement body.

Q72. What is the use of break statement?

Ans : 'Break' in Python is a loop control statement. It is used to control the sequence of the loop. 
Suppose you want to terminate a loop and skip to the next code after the loop; break will help you do that.

Q73. What is the use of pass statement?

Ans: The pass statement is used as a placeholder for future code. When the pass statement is executed, nothing happens, 
but you avoid getting an error when empty code is not allowed. Empty code is not allowed in loops, function definitions, class definitions, or in if statements.

Q74. What is the use of range() function?

Ans : 
It creates the sequence of numbers from start to stop -1.

Q75. How can you loop over a dictionary?

Ans. for k,v in sample_dict.item():

Coding problems
Q76. Write a Python program to find the factorial of a given number.

Ans:
def fact(n):
    c=1
    for i in range(1,n+1):
        c=c*n
        n=n-1
    print("Result",c)    

n=5
fact(n) 

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (PRT)/100

Ans:
print("Please enter Principal , Rate , time followed by comma")
p,r,t=input().split()

si= (int(p)*int(r)*int(t))/100
print(si)


Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

Ans:
print("Please enter Principal , Rate , time followed by comma")
p,r,t=input().split()

ci=int(p)*(pow(1+int(r)/100,int(t)))
print(ci)

Q79. Write a Python program to check if a number is prime or not.

Ans:

def prime(n):
    if n>1:
     for i in range(1,int(n/2)+1):
        if(n%i==0):
            print("Not prime")
            break
        else:
            print("Number is prime")
    else:print("Not prime")        

n=1
prime(n)

Q80. Write a Python program to check Armstrong Number.

Ans:

a=371
b=str(a)
c=[x for x in b]
sum=0
for i in range(0,len(c)):
    sum=sum+int(c[i])**3
if(sum==a):
    print("Armstrong number")
else:
    print("NOt a amstrong number")  

Q81. Write a Python program to find the n-th Fibonacci Number.

Ans:

def fibo(n):
    a,b=0,1
    if(n<=0):
        print("INcorrect")
    elif(n==1):
        print(n)
    else:
        for i in range(1,n):
            
            c=a+b
            a=b
            b=c
            print(a)
        return(a)      
    
      
print("Nth fibo num is:",fibo(7))


Q82. Write a Python program to interchange the first and last element in a list.

Ans:

lists = [1,2,3,4,5]
a=lists[0]
lists[0]=lists[-1]
lists[-1]= a
print(lists)

Q83. Write a Python program to swap two elements in a list.

Ans:

def swap(a,b):
    for i in range(len(lists)):
        if(lists[i] == a ):
            a_add= i
        if(lists[i] == b):
            b_add = i
    lists[b_add] = a
    lists[a_add] = b
    print("Final list:",lists)

a=3
b=4
lists=[1,2,3,4,5]
swap(a,b)

Q84. Write a Python program to find N largest element from a list.

Ans:
def max(l,N):
 final_list=[]
    
 for i in range(0,N):
    max =0 
    for j in range(len(l)):
        if (l[j] > max):
            max = l[j]
    l.remove(max)
    final_list.append(max)

 print(final_list)

l=[1,2,3,4,5]
N=2
max(l,N)

Q85. Write a Python program to find cumulative sum of a list.

Ans:
lists = [10, 20, 30, 40, 50] 
cum = [sum(lists[0:x:1]) for x in range(0,len(lists)+1)]
print(cum[1:])

Q86. Write a Python program to check if a string is palindrome or not.

ANS:

def palindromee(a):
    x=a[::-1]
    if(a==x):
        return True
    else: return False    



a='MADAM'
print("Result:",palindromee(a))

Q87. Write a Python program to remove i'th element from a string.

Ans:

def remove(a,i):
    x=a[:i]
    y=a[i+1:]
    return x+y



a='geeksFORgeeks'
i=4
print(remove(a,i))

Q88. Write a Python program to check if a substring is present in a given string.

Ans:

def string_print(l,k):
    l=l.split(" ")
    
    for i in range(0,len(l)):
        if(l[i]==k):
            return True
            
    return False    

input_str='My name is adil alam'
sub = 'jack'
res=string_print(input_str,sub)
print ("Result is :",res)


Q89. Write a Python program to find words which are greater than given length k.

Ans:

def string_print(l,k):
    l=l.split(" ")
    x=[]
    for i in range(0,len(l)):
        if(len(l[i]) > 2):
            x.append(l[i])
    return x        
input_str='My name is adil alam'
k =2
res=string_print(input_str,k)
print ("Result is :",res)

Q90. Write a Python program to extract unquire dictionary values.

Ans:

test_dict = {'a' : [5, 6, 7, 8],
            'b' : [10, 11, 7, 5],
            'c' : [6, 12, 10, 8],
            'd' : [1, 2, 5]}
x=[]
for i in test_dict.keys():
    x.extend(test_dict[i])
x=set(x)
x=list(x)
x.sort()
print(x)


Q91. Write a Python program to merge two dictionary.

Ans:

dict_1 = {1: 'a', 2: 'b'}
dict_2 = {2: 'c', 4: 'd'}

print(dict_1 | dict_2)

Q92. Write a Python program to convert a list of tuples into dictionary.

Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}

Ans:

input_list = [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
res_dict=dict(input_list)
print(res_dict)


Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.

Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]

Ans:

input_list = [9, 5, 6]
res=[(x,x**3) for x in input_list]
print(res)


Q94. Write a Python program to get all combinations of 2 tuples.

Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]

Ans:
t1=(7, 2)
t2=(7, 8)
res = [(x,y) for x in t1 for y in t2 ] + [(x,y) for x in t2 for y in t1]
print(res)

Q95. Write a Python program to sort a list of tuples by second item.

Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]

Ans:

tup = [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
length = len(tup)
for i in range(0,length):
    for j in range(0,length -i -1):
        if(tup[j][1] > tup[j+1][1]):
            tmp= tup[j]
            tup[j] = tup[j+1]
            tup[j+1] = tmp
print(tup)
Q96. Write a python program to print below pattern.

* 
* * 
* * * 
* * * * 
* * * * * 

Ans:
for i in range(1,6):
    for j in range(1,i+1):
        print("*",end = " ")
    print("")   
Q97. Write a python program to print below pattern.

    *
   **
  ***
 ****
*****

Ans: 
row=6
col=5
for i in range(1,row):
    for j in range(1,col):
        print(end = " ")
    col = col -1
    for j in range(1,i+1):
        print("*",end = "")    
    print("")    
Q98. Write a python program to print below pattern.

    * 
   * * 
  * * * 
 * * * * 
* * * * * 

Ans: 
r=6
c=5
for i in range(1,r):
    for j in range(1,c):
               print(end=" ")
    c= c-1    
    for j in range(1,i+1):
        print("*",end = " ")
    print(" ") 

Q99. Write a python program to print below pattern.

1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5

Ans:
for i in range(1,6):
    for j in range(1,i+1):
        print(j,end=" ")
    print()

Q100. Write a python program to print below pattern.

A 
B B 
C C C 
D D D D 
E E E E E 

Ans: 
for i in range(65,70):
    for j in range(65,i+1):
        print(chr(i),end=" ")
    print()  
    
